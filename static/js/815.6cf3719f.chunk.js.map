{"version":3,"file":"static/js/815.6cf3719f.chunk.js","mappings":"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","sources":["components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/ReviewsListItem/ReviewsListItem.styled.jsx","components/ReviewsListItem/ReviewsListItem.jsx","components/ReviewsList/ReviewsList.styled.jsx","components/ReviewsList/ReviewsList.jsx","pages/Reviews/Reviews.jsx","hooks/useFetchReviews.jsx","services/movies-api.js","utilities/NoImage.styled.jsx","utilities/status.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 50%;\n  min-height: calc(100vh / 4);\n  padding: 12px;\n`;\n\nexport const Message = styled.p`\n  color: gray;\n  font-size: 2rem;\n  font-weight: bold;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return (\n    <Container>\n      <Message>{message}</Message>\n    </Container>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from '@emotion/styled';\n\nexport const Card = styled.li`\n  display: block;\n  padding: 12px;\n\n  box-shadow: 0 0 5px #8080807b;\n\n  &:not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Article = styled.article`\n  display: flex;\n  align-items: center;\n`;\n\nexport const Author = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const AuthorName = styled.h3`\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nexport const Text = styled.p`\n  font-size: 14px;\n`;\n\nexport const AvatarHolder = styled.div`\n  width: 100px;\n  margin-right: 12px;\n`;\nexport const Avatar = styled.img`\n  display: block;\n  width: 100%;\n  object-fit: cover;\n`;\n","import PropTypes from 'prop-types';\nimport { NoImage } from 'utilities/NoImage.styled';\nimport {\n  Author,\n  AvatarHolder,\n  Card,\n  Avatar,\n  AuthorName,\n  Text,\n} from './ReviewsListItem.styled';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nconst ReviewListItem = ({ author, content, avatarPath }) => {\n  const avatar =\n    avatarPath && avatarPath.startsWith('/http')\n      ? avatarPath.slice(1)\n      : `${BASE_URL}${avatarPath}`;\n  return (\n    <Card>\n      <Author>\n        <AvatarHolder>\n          {avatarPath ? (\n            <Avatar src={avatar} alt={`${author} avatar`} />\n          ) : (\n            <NoImage>No avatar</NoImage>\n          )}\n        </AvatarHolder>\n        <AuthorName>Author: {author}</AuthorName>\n      </Author>\n      <Text>{content}</Text>\n    </Card>\n  );\n};\n\nReviewListItem.propTypes = {\n  author: PropTypes.string.isRequired,\n  content: PropTypes.string.isRequired,\n  avatarPath: PropTypes.string,\n};\n\nexport default ReviewListItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  max-width: calc(100% - 48px);\n`;\n","import ReviewListItem from 'components/ReviewsListItem';\nimport PropTypes from 'prop-types';\n\nimport { List } from './ReviewsList.styled';\n\nexport const ReviewsList = ({ reviews }) => {\n  return (\n    <List>\n      {reviews.map(review => {\n        return (\n          <ReviewListItem\n            key={review.id}\n            author={review.author}\n            content={review.content}\n            avatarPath={review.author_details.avatar_path}\n          />\n        );\n      })}\n    </List>\n  );\n};\n\nReviewsList.propTypes = {\n  reviews: PropTypes.arrayOf(\n    PropTypes.shape({\n      author: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n      author_details: PropTypes.shape({\n        avatar_path: PropTypes.string,\n      }),\n    }).isRequired\n  ).isRequired,\n};\n\nexport default ReviewsList;\n","import ReviewsList from 'components/ReviewsList';\nimport Notification from 'components/Notification';\nimport { useFetchReviews } from 'hooks/useFetchReviews';\nimport { STATUS } from 'utilities/status';\n\nconst Reviews = () => {\n  const { reviews, status } = useFetchReviews();\n  return (\n    <>\n      {status === STATUS.RESOLVED && reviews ? (\n        <ReviewsList reviews={reviews} />\n      ) : (\n        <Notification message=\"We don't have any reviews fot this movie.\" />\n      )}\n      {status === STATUS.REJECTED && (\n        <Notification message=\"Ooops! Something went wrong :(... please reload the page.\" />\n      )}\n    </>\n  );\n};\nexport default Reviews;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as moviesApi from '../services/movies-api';\nimport { STATUS } from 'utilities/status';\n\nexport const useFetchReviews = () => {\n  const [reviews, setReviews] = useState(null);\n  const [status, setStatus] = useState(STATUS.IDLE);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    moviesApi\n      .fetchMovieReviews({ movieId })\n      .then(data => {\n        if (data.results.length !== 0) {\n          setReviews(data.results);\n        }\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n        setStatus(STATUS.REJECTED);\n      });\n  }, [movieId]);\n\n  return { reviews, status };\n};\n","const axios = require('axios');\nconst ACESS_KEY = '704d5b04a49684ea4810e36d12ae79df';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchData = async ({ path = '' }) => {\n  const response = await axios.get(path);\n  return response.data;\n};\n\nexport const fetchTrending = async () => {\n  return await fetchData({\n    path: `trending/movie/day?api_key=${ACESS_KEY}&include_adult=false`,\n  });\n};\n\nexport const fetchMoviesBySearch = async ({ query, page = 1 }) => {\n  return await fetchData({\n    path: `search/movie?api_key=${ACESS_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n  });\n};\n\nexport const fetchMovieById = async ({ movieId }) => {\n  return await fetchData({\n    path: `movie/${movieId}?api_key=${ACESS_KEY}`,\n  });\n};\n\nexport const fetchMovieCredits = async ({ movieId }) => {\n  return await fetchData({\n    path: `movie/${movieId}/credits?api_key=${ACESS_KEY}&language=en-US`,\n  });\n};\n\nexport const fetchMovieReviews = async ({ movieId, page = 1 }) => {\n  return await fetchData({\n    path: `movie/${movieId}/reviews?api_key=${ACESS_KEY}&language=en-US&page=${page}`,\n  });\n};\n","import styled from '@emotion/styled';\n\nexport const NoImage = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 12px 4px;\n\n  color: #808080;\n  font-size: 18px;\n  font-weight: bold;\n  text-align: center;\n\n  border: 1px solid #808080;\n`;\n","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["Container","styled","Message","message","Card","Author","AuthorName","Text","AvatarHolder","Avatar","author","content","avatarPath","avatar","startsWith","slice","src","alt","List","reviews","map","review","author_details","avatar_path","id","useState","setReviews","STATUS","status","setStatus","movieId","useParams","useEffect","moviesApi","then","data","results","length","catch","console","log","useFetchReviews","Notification","axios","require","ACESS_KEY","defaults","baseURL","fetchData","path","get","response","fetchTrending","fetchMoviesBySearch","query","page","fetchMovieById","fetchMovieCredits","fetchMovieReviews","NoImage","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}