{"version":3,"file":"static/js/428.a3b1c0c5.chunk.js","mappings":"mMAEaA,EAAYC,EAAAA,EAAAA,IAAH,mKASTC,EAAUD,EAAAA,EAAAA,EAAH,yG,SCIpB,EAZqB,SAAC,GAAiB,IAAfE,EAAc,EAAdA,QACtB,OACE,SAACH,EAAD,WACE,SAACE,EAAD,UAAUC,KAGf,C,4KCPYC,EAAOH,EAAAA,EAAAA,GAAH,6FAMJI,EAAOJ,EAAAA,EAAAA,IAAH,qEAKJK,EAAQL,EAAAA,EAAAA,IAAH,qFAMLM,EAAON,EAAAA,EAAAA,GAAH,8GAOJO,EAAWP,EAAAA,EAAAA,EAAH,wF,SCErB,EAtBwB,SAAC,GAAoC,IAAlCQ,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAC1C,OACE,UAACP,EAAD,WACGO,GACC,SAACL,EAAD,CAAOM,IAAG,UAND,oCAMC,OAAgBD,GAAaE,IAAG,UAAKJ,EAAL,aAE1C,SAAC,IAAD,4CAEF,UAACJ,EAAD,YACE,SAACE,EAAD,UAAOE,KACP,SAACD,EAAD,+BAAyBE,UAIhC,EClBYI,EAAUb,EAAAA,EAAAA,GAAH,iTCgCpB,EA9BoB,SAAC,GAAc,IAAZc,EAAW,EAAXA,KACrB,OACE,8BACGA,IACC,SAACD,EAAD,UACGC,EAAKC,KAAI,SAAAC,GACR,OACE,SAAC,EAAD,CAEER,KAAMQ,EAAMR,KACZC,UAAWO,EAAMP,UACjBC,UAAWM,EAAMC,cAHZD,EAAME,GAMhB,OAKV,ECND,EAZa,WACX,MCD0B,WAC1B,OAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOL,EAAP,KAAaM,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA4BF,EAAAA,EAAAA,UAASI,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACRD,EAAUF,EAAAA,EAAAA,SACVI,EAAAA,GACqB,CAAEN,QAAAA,IACpBO,MAAK,SAAAC,GACJT,EAAQS,EAAKf,MACbW,EAAUF,EAAAA,EAAAA,SACX,IACAO,OAAM,YAAkB,IAAf5B,EAAc,EAAdA,QACR6B,QAAQC,IAAI9B,GACZuB,EAAUF,EAAAA,EAAAA,SACX,GACJ,GAAE,CAACF,IACG,CAAEG,OAAAA,EAAQV,KAAAA,EAClB,CDlB0BmB,GAAjBnB,EAAR,EAAQA,KAAMU,EAAd,EAAcA,OACd,OACE,gCACGA,IAAWD,EAAAA,EAAAA,WAAmB,SAAC,EAAD,CAAaT,KAAMA,IACjDU,IAAWD,EAAAA,EAAAA,WACV,SAACW,EAAA,GAAD,CAAchC,QAAQ,gEAI7B,C,yLEfKiC,EAAQC,EAAQ,MAChBC,EAAY,mCAClBF,EAAMG,SAASC,QAAU,gCAGzB,IAAMC,EAAS,mCAAG,oGAASC,KAAAA,OAAT,MAAgB,GAAhB,WACON,EAAMO,IAAID,GADjB,cACVE,EADU,yBAETA,EAASd,MAFA,2CAAH,sDAKFe,EAAa,mCAAG,8FACdJ,EAAU,CACrBC,KAAK,8BAAD,OAAgCJ,EAAhC,0BAFqB,mFAAH,qDAMbQ,EAAmB,mCAAG,gGAASC,EAAT,EAASA,MAAT,IAAgBC,KAAAA,OAAhB,MAAuB,EAAvB,WACpBP,EAAU,CACrBC,KAAK,wBAAD,OAA0BJ,EAA1B,iCAA4DS,EAA5D,iBAA0EC,EAA1E,0BAF2B,mFAAH,sDAMnBC,EAAc,mCAAG,4FAAS3B,EAAT,EAASA,QAAT,SACfmB,EAAU,CACrBC,KAAK,SAAD,OAAWpB,EAAX,oBAA8BgB,KAFR,mFAAH,sDAMdY,EAAiB,mCAAG,4FAAS5B,EAAT,EAASA,QAAT,SAClBmB,EAAU,CACrBC,KAAK,SAAD,OAAWpB,EAAX,4BAAsCgB,EAAtC,qBAFyB,mFAAH,sDAMjBa,EAAiB,mCAAG,gGAAS7B,EAAT,EAASA,QAAT,IAAkB0B,KAAAA,OAAlB,MAAyB,EAAzB,WAClBP,EAAU,CACrBC,KAAK,SAAD,OAAWpB,EAAX,4BAAsCgB,EAAtC,gCAAuEU,KAF9C,mFAAH,qD,sEChCjBI,E,QAAUnD,EAAAA,EAAH,4R,uDCFb,IAAMuB,EAAS,CACpB6B,KAAM,OACNC,QAAS,UACTC,SAAU,WACVC,SAAU,W","sources":["components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","components/CastGalleryCard/CastGalleryCard.styled.jsx","components/CastGalleryCard/CastGalleryCard.jsx","components/CastGallery/CastGallery.styled.jsx","components/CastGallery/CastGallery.jsx","pages/Cast/Cast.jsx","hooks/useFetchCast.jsx","services/movies-api.js","utilities/NoImage.styled.jsx","utilities/status.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 50%;\n  min-height: calc(100vh / 4);\n  padding: 12px;\n`;\n\nexport const Message = styled.p`\n  color: gray;\n  font-size: 2rem;\n  font-weight: bold;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { Container, Message } from './Notification.styled';\n\nconst Notification = ({ message }) => {\n  return (\n    <Container>\n      <Message>{message}</Message>\n    </Container>\n  );\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Photo = styled.img`\n  display: block;\n  max-width: 100%;\n  object-fit: cover;\n`;\n\nexport const Name = styled.h3`\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1.5;\n  text-align: center;\n`;\n\nexport const InfoText = styled.p`\n  font-size: 14px;\n  line-height: 1.5;\n  text-align: center;\n`;\n","import PropTypes from 'prop-types';\nimport { NoImage } from 'utilities/NoImage.styled';\nimport { Info, Item, Photo, Name, InfoText } from './CastGalleryCard.styled';\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w200/';\n\nconst CastGalleryCard = ({ name, character, photoPath }) => {\n  return (\n    <Item>\n      {photoPath ? (\n        <Photo src={`${BASE_URL}${photoPath}`} alt={`${name} photo`} />\n      ) : (\n        <NoImage>Sorry, no photo available :(</NoImage>\n      )}\n      <Info>\n        <Name>{name}</Name>\n        <InfoText>{`Character: ${character}`}</InfoText>\n      </Info>\n    </Item>\n  );\n};\n\nCastGalleryCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  character: PropTypes.string.isRequired,\n  photoPath: PropTypes.string,\n};\n\nexport default CastGalleryCard;\n","import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100% - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(160px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 16px 0;\n  padding-right: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import CastGalleryCard from 'components/CastGalleryCard';\nimport PropTypes from 'prop-types';\nimport { Gallery } from './CastGallery.styled';\n\nconst CastGallery = ({ cast }) => {\n  return (\n    <>\n      {cast && (\n        <Gallery>\n          {cast.map(actor => {\n            return (\n              <CastGalleryCard\n                key={actor.id}\n                name={actor.name}\n                character={actor.character}\n                photoPath={actor.profile_path}\n              />\n            );\n          })}\n        </Gallery>\n      )}\n    </>\n  );\n};\n\nCastGallery.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      character: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      profile_path: PropTypes.string,\n    }).isRequired\n  ).isRequired,\n};\nexport default CastGallery;\n","import { useFetchCast } from 'hooks/useFetchCast';\nimport { STATUS } from 'utilities/status';\nimport Notification from 'components/Notification';\nimport CastGallery from 'components/CastGallery';\n\nconst Cast = () => {\n  const { cast, status } = useFetchCast();\n  return (\n    <>\n      {status === STATUS.RESOLVED && <CastGallery cast={cast} />}\n      {status === STATUS.REJECTED && (\n        <Notification message=\"Ooops! Something went wrong :(... please reload the page.\" />\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as moviesApi from '../services/movies-api';\nimport { STATUS } from 'utilities/status';\n\nexport const useFetchCast = () => {\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n  const [status, setStatus] = useState(STATUS.IDLE);\n\n  useEffect(() => {\n    setStatus(STATUS.PENDING);\n    moviesApi\n      .fetchMovieCredits({ movieId })\n      .then(data => {\n        setCast(data.cast);\n        setStatus(STATUS.RESOLVED);\n      })\n      .catch(({ message }) => {\n        console.log(message);\n        setStatus(STATUS.REJECTED);\n      });\n  }, [movieId]);\n  return { status, cast };\n};\n","const axios = require('axios');\nconst ACESS_KEY = '704d5b04a49684ea4810e36d12ae79df';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// const BASE_URL = 'https://api.themoviedb.org/3/';\n\nconst fetchData = async ({ path = '' }) => {\n  const response = await axios.get(path);\n  return response.data;\n};\n\nexport const fetchTrending = async () => {\n  return await fetchData({\n    path: `trending/movie/day?api_key=${ACESS_KEY}&include_adult=false`,\n  });\n};\n\nexport const fetchMoviesBySearch = async ({ query, page = 1 }) => {\n  return await fetchData({\n    path: `search/movie?api_key=${ACESS_KEY}&language=en-US&query=${query}&page=${page}&include_adult=false`,\n  });\n};\n\nexport const fetchMovieById = async ({ movieId }) => {\n  return await fetchData({\n    path: `movie/${movieId}?api_key=${ACESS_KEY}`,\n  });\n};\n\nexport const fetchMovieCredits = async ({ movieId }) => {\n  return await fetchData({\n    path: `movie/${movieId}/credits?api_key=${ACESS_KEY}&language=en-US`,\n  });\n};\n\nexport const fetchMovieReviews = async ({ movieId, page = 1 }) => {\n  return await fetchData({\n    path: `movie/${movieId}/reviews?api_key=${ACESS_KEY}&language=en-US&page=${page}`,\n  });\n};\n","import styled from '@emotion/styled';\n\nexport const NoImage = styled.p`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  max-width: 100%;\n  height: 100%;\n  margin: 0;\n  padding: 12px 4px;\n\n  color: #808080;\n  font-size: 18px;\n  font-weight: bold;\n  text-align: center;\n\n  border: 1px solid #808080;\n`;\n","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n"],"names":["Container","styled","Message","message","Item","Info","Photo","Name","InfoText","name","character","photoPath","src","alt","Gallery","cast","map","actor","profile_path","id","useState","setCast","movieId","useParams","STATUS","status","setStatus","useEffect","moviesApi","then","data","catch","console","log","useFetchCast","Notification","axios","require","ACESS_KEY","defaults","baseURL","fetchData","path","get","response","fetchTrending","fetchMoviesBySearch","query","page","fetchMovieById","fetchMovieCredits","fetchMovieReviews","NoImage","IDLE","PENDING","RESOLVED","REJECTED"],"sourceRoot":""}